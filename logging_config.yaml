version: 1
disable_existing_loggers: false

formatters:
  standard:
    format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'
  
  detailed:
    format: '%(asctime)s - %(name)s - %(levelname)s - %(module)s:%(funcName)s:%(lineno)d - %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'
  
  simple:
    format: '%(levelname)s - %(message)s'

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: standard
    stream: ext://sys.stdout
  
  console_error:
    class: logging.StreamHandler
    level: ERROR
    formatter: detailed
    stream: ext://sys.stderr
  
  info_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: standard
    filename: logs/info.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf-8
  
  error_file:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: detailed
    filename: logs/error.log
    maxBytes: 10485760  # 10MB
    backupCount: 10
    encoding: utf-8
  
  debug_file:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    formatter: detailed
    filename: logs/debug.log
    maxBytes: 52428800  # 50MB
    backupCount: 3
    encoding: utf-8

loggers:
  # API modules - more verbose logging for external calls
  governmentreporter.apis:
    level: DEBUG
    handlers: [console, info_file, error_file, debug_file]
    propagate: false
  
  # Database operations - important to track
  governmentreporter.database:
    level: INFO
    handlers: [console, info_file, error_file]
    propagate: false
  
  # Document processors - detailed logging for complex operations
  governmentreporter.processors:
    level: DEBUG
    handlers: [console, info_file, error_file, debug_file]
    propagate: false
  
  # Metadata generation - track AI API calls
  governmentreporter.metadata:
    level: INFO
    handlers: [console, info_file, error_file]
    propagate: false
  
  # Utils - less verbose unless debugging
  governmentreporter.utils:
    level: INFO
    handlers: [console, info_file, error_file]
    propagate: false
  
  # Server/MCP - important for monitoring
  governmentreporter.server:
    level: INFO
    handlers: [console, info_file, error_file]
    propagate: false

# Root logger - catches everything not handled by specific loggers
root:
  level: WARNING
  handlers: [console_error, error_file]

# Third-party library logging levels
loggers:
  urllib3:
    level: WARNING
  requests:
    level: WARNING
  httpx:
    level: WARNING
  chromadb:
    level: INFO
  ollama:
    level: INFO